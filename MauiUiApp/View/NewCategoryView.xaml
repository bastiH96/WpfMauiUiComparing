<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:model="clr-namespace:WpfMauiLibrary.Models;assembly=WpfMauiLibrary"
             xmlns:viewmodel="clr-namespace:MauiUiApp.ViewModel"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="MauiUiApp.View.NewCategoryView"
             x:DataType="viewmodel:NewCategoryViewModel">
    <ContentPage.Resources>
        <x:String x:Key="flag">&#xf024;</x:String>
        <x:String x:Key="trash_can">&#xf2ed;</x:String>
        <x:String x:Key="edit">&#xf044;</x:String>
        <x:String x:Key="due_date">&#xf073;</x:String>
    </ContentPage.Resources>
    
    <Grid
        ColumnDefinitions="*, Auto"
        RowDefinitions="Auto, Auto, Auto, Auto, Auto, Auto, *, Auto"
        Padding="5">
        <Picker
            Grid.Row="0"
            Grid.Column="1"
            ItemsSource="{Binding OrderOptions}"
            SelectedItem="{Binding SelectedPickerItem}">
            <Picker.Behaviors>
                <toolkit:EventToCommandBehavior
                    EventName="SelectedIndexChanged"
                    Command="{Binding SortListsCommand}"/>
            </Picker.Behaviors>
        </Picker>

        <Button
            Text="{Binding ReverseButtonText}"
            IsVisible="{Binding IsSortingActive}"
            Command="{Binding ReverseSortingCommand}"/>

        <Label
            Grid.Row="2"
            Grid.ColumnSpan="2"
            Text="Tasks:"/>
        <CollectionView
            Grid.Row="2"
            Grid.ColumnSpan="2"
            ItemsSource="{Binding ToDoTasksOpen}">
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="{x:Type model:ToDoTaskModel}">
                    <Frame
                        Padding="20, 5"
                        Margin="2">
                        <Grid
                            RowSpacing="0"
                            ColumnDefinitions="Auto, *, Auto, Auto"
                            ColumnSpacing="10">
                            <FlyoutBase.ContextFlyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem
                                        Text="Edit Text...">
                                        <MenuFlyoutItem.IconImageSource>
                                            <FontImageSource
                                                FontFamily="FAS"
                                                Color="Blue"
                                                Glyph="{StaticResource edit}"/>
                                        </MenuFlyoutItem.IconImageSource>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutSubItem
                                        Text="Priority">
                                        <MenuFlyoutSubItem.IconImageSource>
                                            <FontImageSource
                                                FontFamily="FAS"
                                                Color="LightGrey"
                                                Glyph="{StaticResource flag}"/>
                                        </MenuFlyoutSubItem.IconImageSource>
                                        <MenuFlyoutItem
                                            Text="Most Important"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:NewCategoryViewModel}}, Path=Prio1Command}"
                                            CommandParameter="{Binding .}">
                                            <MenuFlyoutItem.IconImageSource>
                                                <FontImageSource
                                                    FontFamily="FAS"
                                                    Color="Red"
                                                    Glyph="{StaticResource flag}"/>
                                            </MenuFlyoutItem.IconImageSource>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutItem
                                            Text="High Priority"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:NewCategoryViewModel}}, Path=Prio2Command}"
                                            CommandParameter="{Binding .}">
                                            <MenuFlyoutItem.IconImageSource>
                                                <FontImageSource
                                                    FontFamily="FAS"
                                                    Color="Yellow"
                                                    Glyph="{StaticResource flag}"/>
                                            </MenuFlyoutItem.IconImageSource>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutItem
                                            Text="Low Priority"
                                            Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:NewCategoryViewModel}}, Path=Prio3Command}"
                                            CommandParameter="{Binding .}">
                                            <MenuFlyoutItem.IconImageSource>
                                                <FontImageSource
                                                    FontFamily="FAS"
                                                    Color="Green"
                                                    Glyph="{StaticResource flag}"/>
                                            </MenuFlyoutItem.IconImageSource>
                                        </MenuFlyoutItem>
                                    </MenuFlyoutSubItem>
                                    <MenuFlyoutItem
                                        Text="Due Date">
                                        <MenuFlyoutItem.IconImageSource>
                                            <FontImageSource
                                                FontFamily="FAS"
                                                Color="LightGrey"
                                                Glyph="{StaticResource due_date}"/>
                                        </MenuFlyoutItem.IconImageSource>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutSeparator/>
                                    <MenuFlyoutItem
                                        Text="Delete"
                                        Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:NewCategoryViewModel}}, Path=DeleteToDoTaskCommand}"
                                        CommandParameter="{Binding .}">
                                        <MenuFlyoutItem.IconImageSource>
                                            <FontImageSource
                                                FontFamily="FAS"
                                                Color="Red"
                                                Glyph="{StaticResource trash_can}"/>
                                        </MenuFlyoutItem.IconImageSource>
                                    </MenuFlyoutItem>
                                </MenuFlyout>
                            </FlyoutBase.ContextFlyout>
                            <Button
                                MinimumHeightRequest="20"
                                MinimumWidthRequest="20"
                                ImageSource="square_regular.png"
                                BackgroundColor="Transparent"
                                Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:NewCategoryViewModel}}, Path=ChangeStatusCommand}"
                                CommandParameter="{Binding .}"
                                VerticalOptions="Center"/>
                            <Label
                                Grid.Column="1"
                                VerticalOptions="Center"
                                Text="{Binding Content}"/>
                            <Label
                                Grid.Column="2"
                                TextColor="White"
                                VerticalOptions="Center"
                                Text="{Binding DueDate}"/>
                            <Image
                                Grid.Column="3"
                                HeightRequest="15"
                                WidthRequest="15">
                                <Image.Source>
                                    <FontImageSource
                                        FontFamily="FAS"
                                        Color="{Binding PriorityColor}"
                                        Glyph="{StaticResource flag}"/>
                                </Image.Source>
                            </Image>
                        </Grid>
                    </Frame>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>
        
        <BoxView
            Grid.ColumnSpan="2"
            Grid.Row="4"
            HeightRequest="1"
            CornerRadius="20"
            Margin="5"
            BackgroundColor="Black"/>
        
        <Label
            Grid.ColumnSpan="2"
            Grid.Row="5"
            Text="Completed:"/>
        <CollectionView
            Grid.ColumnSpan="2"
            Grid.Row="6"
            ItemsSource="{Binding ToDoTasksCompleted}">
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="{x:Type model:ToDoTaskModel}">
                    <Frame
                        Padding="0"
                        Margin="2">
                        <Grid
                            RowSpacing="0"
                            ColumnDefinitions="Auto, *, Auto">
                            <Button
                                MinimumHeightRequest="20"
                                MinimumWidthRequest="20"
                                ImageSource="square_check_regular.png"
                                BackgroundColor="Transparent"
                                Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:NewCategoryViewModel}}, Path=ChangeStatusCommand}"
                                CommandParameter="{Binding .}"
                                VerticalOptions="Center"/>
                            <Label
                                Grid.Column="1"
                                VerticalOptions="Center"
                                TextDecorations="Strikethrough"
                                Text="{Binding Content}"/>
                            <Button
                                Grid.Column="2"
                                MinimumHeightRequest="35"
                                MinimumWidthRequest="35"
                                Padding="0"
                                Margin="3"
                                ImageSource="trash_can_regular.png"
                                BackgroundColor="Red"
                                Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:NewCategoryViewModel}}, Path=DeleteToDoTaskCommand}"
                                CommandParameter="{Binding .}"
                                VerticalOptions="Center"/>
                        </Grid>
                    </Frame>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>


        <Grid
            Grid.ColumnSpan="2"
            Grid.Row="7"
            ColumnDefinitions="*, Auto, Auto, Auto, Auto">
            <Entry
                Grid.Column="0"
                Grid.ColumnSpan="5"
                Text="{Binding Content}"
                ReturnCommand="{Binding CreateNewToDoTaskCommand}"
                Placeholder="Enter new task"/>
            <DatePicker
                Grid.Column="1"
                Date="{Binding DueDateDate}"
                BackgroundColor="Transparent"/>
            <TimePicker
                Grid.Column="2"
                VerticalOptions="Center"
                Time="{Binding DueDateTime}"
                IsVisible="{Binding TimeIsVisible}"
                BackgroundColor="Transparent"/>
            <Button
                Grid.Column="3"
                ImageSource="flag_regular.png"
                Command="{Binding OpenFlagPopUpCommand}"/>
            <Button
                Grid.Column="4"
                Text="Submit"
                Command="{Binding CreateNewToDoTaskCommand}"/>
        </Grid>
    </Grid>
</ContentPage>